swagger: "2.0"
info:
  description: "Description"
  version: "1.0.0"
  title: "Shfuggiente SE 2"
host: "shfuggientese2.herokuapp.com"
basePath: "/api/v1"
schemes:
- "https"
consumes:
- application/json
produces:
- application/json
paths:
  /exams:
    post:
      tags:
      - "Exams"
      summary: "Add a new exam"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      # TODO: Add parameters
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Exam"
      responses:
        200:
          description: "Done"
        405:
          description: "Invalid input"
  /exams/{id}:
    parameters:
    - name: id
      in: path
      required: true
      type: integer
    get:
      summary: Obtain exam info
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Exam'
          examples:
            'application/json':
              id: 1
              name: 'MyExam'
              exercises: [4,5,78,64,61,98]
    put:
      summary: Modify an exam
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Exam"
      responses:
        204:
          description: 'Modified successfully'
    delete:
      summary: Delete an exam
      responses:
        204:
          description: 'Deleted succsessfully'
  /exams/{id}/groups:
    parameters:
    - name: id
      in: path
      required: true
      type: integer
    get:
      summary: Obtain groups associated with an exam
      responses:
        200:
          description: Successful response
          examples:
            'application/json':
              - id: 143
                groups: [43,765,54,98]
    post:
      summary: Add a group to this specific exam
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/GroupId"
      responses:
        200:
          description: "Done"
        405:
          description: "Invalid input"
  /exams/{examId}/groups/{groupId}:
    parameters:
    - name: examId
      in: path
      required: true
      type: integer
    - name: groupId
      in: path
      required: true
      type: integer
    delete:
      summary: Remove a group assigned to an exam
      responses:
        204:
          description: 'Deleted succsessfully'
  /exams/{id}/submissions:
    parameters:
    - name: id
      in: path
      required: true
      type: integer
    get:
      summary: Obtain the submissions' IDs related to a exam
      responses:
        200:
          description: Success
          examples:
            'application/json':
              id: 43
              submissions: [1,54,76,43,87]
    post:
      summary: Create a new submissions for an exam
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Submission"
      responses:
        200:
          description: "Done"
        405:
          description: "Invalid input"
  /groups:
    get:
      tags:
        - "Groups"
      summary: Obtain a list of the groups
      responses:
        200:
          description: 'successfull response'
          examples:
            'application/json':
              - id: 1
                name: 'group1'
              - id: 2
                name: 'group2'
    post:
      summary: "Create a group"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Group informations"
        required: true
        schema:
          $ref: "#/definitions/Group"
      responses:
        200:
          description: "Group created successfully"
        405:
          description: "Error creating group" 
  /groups/{id}:
    get:
      summary: "Obtain group informations"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: "successfull response"
          examples:
            'application/json':
              [4,5,78,64,61,98]
    put:
      summary: "Modify group"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - in: "body"
        name: "Group"
        required: true
        schema:
          $ref: "#/definitions/Group"  
      responses:
        204:
          description: "Group modified successfully"  
    delete:
      summary: "Delete group"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: 'Deleted succsessfully'
  /users:
    get:
      tags:
        - "Users"
      summary: Obtain a list of the users
      responses:
        200:
          description: 'successfull response'
          examples:
            'application/json':
              - id: 1
                name: 'user1'
              - id: 2
                name: 'user2'
    post:
      summary: "Create a user"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "User informations"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "User created successfully"
        405:
          description: "Error creating user"     
  /users/{id}:        
    get:
      summary: "Obtain user informations"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: "successfull response"
          examples:
            'application/json':
              id: 1
              name: "User 1"
              mail: "mail@provider.net"
    put:
      summary: "Modify user"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - in: "body"
        name: "User"
        required: true
        schema:
          $ref: "#/definitions/User"  
      responses:
        204:
          description: "User modified successfully" 
    delete:
      summary: "Delete user"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: 'Deleted succsessfully'


definitions:
  Submission:
    type: "object"
    required:
    - "groupId"
    - "answers"
    properties:
      groupId:
        type: integer
        example: 54
      answers:
        type: array
        example: ['ah', 'non', 'lo', 'so', 'io']
  GroupId:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        example: 13
  Exam:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Exam 1"
      exercises:
        type: "array"
        example: [1,98,54,78,100]
  Group:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Group 1"
      members:
        type: "array"
        example: [1,98,54,78,100]
  User:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "User 1"
      mail:
        type: "string"
        example: "mail@provider.net"
externalDocs:
  description: "Find out more about Shfuggiente SE 2"
  url: "https://github.com/Fodark/shfuggiente_se2/wiki"
